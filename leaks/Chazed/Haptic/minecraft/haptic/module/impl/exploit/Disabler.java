package haptic.module.impl.exploit;

import java.util.LinkedList;

import com.mojang.realmsclient.gui.ChatFormatting;

import haptic.Haptic;
import haptic.event.Event;
import haptic.event.impl.EventReceivePacket;
import haptic.event.impl.EventRender;
import haptic.event.impl.EventSendPacket;
import haptic.event.impl.EventUpdate;
import haptic.module.Category;
import haptic.module.Module;
import haptic.module.impl.combat.Velocity;
import haptic.processor.impl.PacketsProcessor;
import haptic.setting.impl.ModeSetting;
import haptic.util.misc.HotbarUtil;
import haptic.util.network.PacketSleepThread;
import haptic.util.network.PacketUtils;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0BPacketEntityAction.Action;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.util.BlockPos;

public class Disabler extends Module {
	
	public ModeSetting mode = new ModeSetting("Mode", "Verus Combat", "Verus Combat");
	
	private LinkedList<Packet> packetsQueue = new LinkedList<>();
	private LinkedList<Packet> transactionsQueue = new LinkedList<>();
	
	private boolean waitingForLagback;
	
	public Disabler() {
		super("Disabler", Category.EXPLOIT);
		this.addSettings(mode);
	}
	
	public void onEnable() {
		transactionsQueue.clear();
		packetsQueue.clear();
		waitingForLagback = false;
	}
	
	public void onDisable() {
		Haptic.getPacketsProcessor().setBlinking(false);
		Haptic.getPacketsProcessor().setMovePacketsDelay(0);
		Haptic.getPacketsProcessor().setPingPacketsDelay(0);
		transactionsQueue.clear();
		packetsQueue.clear();
	}
	
	public void onEvent(Event e) {
		if(e instanceof EventRender) {
			this.setDisplayName(this.getName() + ChatFormatting.GRAY + " " + mode.getMode());
		}
		switch(mode.getMode()) {
		case "Verus Combat":
			VerusCombat(e);
			break;
		}
	}
	
	private void VerusCombat(Event event) {
		//Only disable combat checks, won't help you to make a verus damage fly longer. That's a simple disabler
		if(event instanceof EventUpdate) {
			Haptic.getPacketsProcessor().setMovePacketsDelay(0);
			Haptic.getPacketsProcessor().setPingPacketsDelay(20); // You may need to adjust that value
		} else if(event instanceof EventSendPacket) {
			EventSendPacket e = (EventSendPacket) event;
			if(e.getPacket() instanceof C0FPacketConfirmTransaction) {
				if(transactionsQueue.size() < 20) {
					e.setCancelled(true);
					transactionsQueue.add(e.getPacket());
				}
			}
		}
	}

}
