package me.wavelength.baseclient.module.modules.exploit;

import me.wavelength.baseclient.BaseClient;
import me.wavelength.baseclient.command.commands.FriendsCommand;
import me.wavelength.baseclient.event.events.PacketReceivedEvent;
import me.wavelength.baseclient.event.events.PacketSentEvent;
import me.wavelength.baseclient.event.events.UpdateEvent;
import me.wavelength.baseclient.module.AntiCheat;
import me.wavelength.baseclient.module.Category;
import me.wavelength.baseclient.module.Module;
import me.wavelength.baseclient.utils.Utils;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C01PacketChatMessage;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C02PacketUseEntity.Action;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C05PacketPlayerLook;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.util.ChatComponentText;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C16PacketClientStatus;
import net.minecraft.network.play.server.S02PacketChat;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

public class HypixelHelper extends Module {

	public HypixelHelper() {
		super("HypixelHelper", "Use this whenever you play hypixel!", 0, Category.EXPLOIT, AntiCheat.HYPIXEL);
		moduleSettings.addDefault("Strafe Disabler", true);
		moduleSettings.addDefault("Timer Disabler", true);
		moduleSettings.addDefault("Scaffold Disabler", true);
		moduleSettings.addDefault("AutoPlay", true);
	}

	@Override
	public void setup() {

	}
	
	public static boolean unsafe = false;
	int BussDelay;
	int BussCount;
	int SpoofFuckery;

	public void onDisable() {
		unsafe = false;
	}
	
	public void onEnable() {
		unsafe = true;
	}
	
	@Override
	public void onUpdate(UpdateEvent event) {
		SpoofFuckery++;
		unsafe = true;
	}
	
	public void onPacketReceived(PacketReceivedEvent event) {
		
		
		
		if(this.moduleSettings.getBoolean("AutoPlay") == true) {
			
			
			
			if(event.getPacket() instanceof S02PacketChat) {
				S02PacketChat S02 = (S02PacketChat)event.getPacket();
				
				
				if(S02.getChatComponent().toString().contains("Want to play again?")) {
						mc.thePlayer.sendChatMessage("/Play solo_insane");
				}

			}
		}
		
		
		
	}
	
	

	@Override
	public void onPacketSent(PacketSentEvent event) {
		
		if(event.getPacket() instanceof C01PacketChatMessage) {
			C01PacketChatMessage C01 = (C01PacketChatMessage)event.getPacket();

			
			
			if(C01.getMessage().toString().contains("Zyth") || C01.getMessage().toString().contains("zyth")) {
				event.setCancelled(true);
				Utils.message = "Hypixel checks for this word, so it was not sent.";
				Utils.print();
			}
			
			if(C01.getMessage().toString().contains("Client") || C01.getMessage().toString().contains("client")) {
				event.setCancelled(true);
				Utils.message = "Hypixel checks for this word, so it was not sent.";
				Utils.print();
			}

		}
		

	if(this.moduleSettings.getBoolean("Strafe Disabler")) {
		

		
		if(mc.thePlayer.ticksExisted <= 100) {
			if(event.getPacket() instanceof C03PacketPlayer || event.getPacket() instanceof C04PacketPlayerPosition) {
				event.setCancelled(true);
			}
		}
		
		
	}
	
	
	if(this.moduleSettings.getBoolean("Timer Disabler")) {
		if(event.getPacket() instanceof C00PacketKeepAlive) {
			try {
				Thread.sleep(50L);
			} catch (Exception e) {
				e.printStackTrace();
			}
	}
	}
			

		
		


		
		if(this.moduleSettings.getBoolean("Scaffold Disabler") == true) {
            if(mc.thePlayer.isCollided) {
                mc.thePlayer.cameraYaw = 180;
            }else {
                mc.thePlayer.cameraYaw = 160;
            }
		}
	}
}