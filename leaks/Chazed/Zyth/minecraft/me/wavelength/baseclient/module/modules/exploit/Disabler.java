package me.wavelength.baseclient.module.modules.exploit;

import me.wavelength.baseclient.event.events.PacketReceivedEvent;
import me.wavelength.baseclient.event.events.PacketSentEvent;
import me.wavelength.baseclient.event.events.UpdateEvent;
import me.wavelength.baseclient.module.AntiCheat;
import me.wavelength.baseclient.module.Category;
import me.wavelength.baseclient.module.Module;
import me.wavelength.baseclient.module.modules.combat.Killaura;
import me.wavelength.baseclient.utils.MovementUtils;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C05PacketPlayerLook;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C09PacketHeldItemChange;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0BPacketEntityAction.Action;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C11PacketEnchantItem;
import net.minecraft.network.play.client.C13PacketPlayerAbilities;
import net.minecraft.network.play.server.S00PacketKeepAlive;
import net.minecraft.network.play.server.S02PacketChat;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.network.play.server.S1DPacketEntityEffect;
import net.minecraft.network.play.server.S27PacketExplosion;
import net.minecraft.network.play.server.S2APacketParticles;
import net.minecraft.network.play.server.S44PacketWorldBorder;
import net.minecraft.util.BlockPos;
import net.minecraft.util.ChatComponentText;

public class Disabler extends Module {

	public Disabler() {
		super("Disabler", "Sends funny packets...", 0, Category.EXPLOIT, AntiCheat.GHOSTLY, AntiCheat.VERUS, AntiCheat.MMC, AntiCheat.HAZEL, AntiCheat.LUNAR, AntiCheat.VULCAN, AntiCheat.MORGAN, AntiCheat.MATRIX);
	}
	
	private int penis;
	public static boolean hazel;
	

	@Override
	public void setup() {
	}
	
	

	@Override
	public void onEnable() {

		if(this.antiCheat == AntiCheat.HAZEL) {
			hazel = true;
		}
		
		
	}

	@Override
	public void onDisable() {
		hazel = false;
	}


	@Override
	public void onUpdate(UpdateEvent event) {
		penis++;
		

		

		
		if(this.antiCheat == AntiCheat.HAZEL) {
			hazel = true;
		}else {
			hazel = false;
		}

        
		if(this.antiCheat == AntiCheat.HAZEL) {

			
			if(mc.thePlayer.ticksExisted % 100 == 0) {
    			mc.thePlayer.addChatComponentMessage(new ChatComponentText("\u00a75Zyth\u00a78 > \u00a7f tp"));
    			if(MovementUtils.isMoving())
    				mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, -10000, mc.thePlayer.posZ, mc.thePlayer.onGround));
			}

			
			}
		
		
		
		if(this.antiCheat == AntiCheat.MMC) {
			
            if(penis >= 10) {
    			mc.thePlayer.addChatComponentMessage(new ChatComponentText("\u00a75Zyth\u00a78 > \u00a7f You can now fly!"));
 		        
 		        penis = 0;
 		        
            }else {
            	mc.timer.timerSpeed = 1;
            }
		}
		
		
		if(this.antiCheat == AntiCheat.GHOSTLY) {
			
			mc.thePlayer.sendQueue.addToSendQueue(new C0CPacketInput());
			
		}
	}
	
	
	public void onPacketReceived(PacketReceivedEvent event) {
		
		if(this.antiCheat == AntiCheat.MORGAN) {


		
		}

		
		if(this.antiCheat == AntiCheat.VULCAN) {
			if(event.getPacket() instanceof S27PacketExplosion ||
					event.getPacket() instanceof S2APacketParticles ||
					event.getPacket() instanceof S1DPacketEntityEffect ||
					event.getPacket() instanceof S44PacketWorldBorder) {
				event.setCancelled(true);
	        }
	        if(event.getPacket() instanceof S00PacketKeepAlive) {
	            S00PacketKeepAlive p = (S00PacketKeepAlive) event.getPacket();
	            if(p.func_149134_c() > 1600000000) {
					event.setCancelled(true);
					mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - 10, mc.thePlayer.posZ, mc.thePlayer.onGround));
	            }
	        }
		}
		
	}

	@Override
	public void onPacketSent(PacketSentEvent event) {
		
		if(this.antiCheat == AntiCheat.MATRIX) {
			if(mc.thePlayer.ticksExisted % 2 == 0) {
				if(event.getPacket() instanceof C03PacketPlayer) {
					event.setCancelled(true);
				}
			}
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		if(this.antiCheat == AntiCheat.LUNAR) {
			
			if(mc.thePlayer.ticksExisted % 25 == 0) {
    			mc.thePlayer.addChatComponentMessage(new ChatComponentText("\u00a75Zyth\u00a78 > \u00a7f tp"));
    			if(MovementUtils.isMoving())
    				mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - 10, mc.thePlayer.posZ, mc.thePlayer.onGround));
			}
			
			
	        if(event.getPacket() instanceof C0FPacketConfirmTransaction) {
	        	event.setCancelled(true);
	        }
	        
	        if(event.getPacket() instanceof C00PacketKeepAlive) {
	        	event.setCancelled(true);
	        }

		}
		
		if(this.antiCheat == AntiCheat.HAZEL) {

	        	
			
		}
		
		

		if(this.antiCheat == AntiCheat.MMC) {
		}
		
		
		if(this.antiCheat == AntiCheat.VERUS) {
			

	        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
	        	event.setCancelled(true);
	        }
	        
	        if (event.getPacket() instanceof C00PacketKeepAlive) {
	        	event.setCancelled(true);
	        }
	        
		}

		
		if(this.antiCheat == AntiCheat.GHOSTLY) {
	        if (event.getPacket() instanceof C05PacketPlayerLook) {
	        	event.setCancelled(true);
	        }
	        
	        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
	        	event.setCancelled(true);
	        }
		}
	}

}