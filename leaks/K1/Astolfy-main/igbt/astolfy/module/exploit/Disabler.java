package igbt.astolfy.module.exploit;

import java.util.ArrayList;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import org.lwjgl.input.Keyboard;


import igbt.astolfy.Astolfy;
import igbt.astolfy.events.Event;
import igbt.astolfy.events.EventDirection;
import igbt.astolfy.events.listeners.EventPacket;
import igbt.astolfy.module.ModuleBase;
import igbt.astolfy.module.movement.Flight;
import igbt.astolfy.settings.settings.ModeSetting;
import igbt.astolfy.utils.TimerUtils;
import io.netty.util.concurrent.ScheduledFuture;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.util.IChatComponent;

public class Disabler extends ModuleBase {

	public ModeSetting mode;
	public TimerUtils timer = new TimerUtils();
	public static double x,y,z;
	public CopyOnWriteArrayList<Packet> packets = new CopyOnWriteArrayList<>();
	
	public Disabler() {
		super("Disabler", Keyboard.KEY_NONE, Category.EXPLOIT);
		this.mode = new ModeSetting("Mode", "Hypixel", "BlocksMC", "Experimental");
		addSettings(mode);
	}
	
	public void onEvent(Event event) {
		if(mc.thePlayer == null)
			return;
		if(event instanceof EventPacket) {
			EventPacket e = (EventPacket)event;
			switch(mode.getCurrentValue()) {
				case "Hypixel":
					setSuffix("Watchdog | " + timer.getTime());
					if (timer.hasReached(700)) {
						if (this.packets.size() > 5) {
							for (Packet p : packets) {
								mc.thePlayer.sendQueue.addToSendQueueNoEvent(p);
							}
							packets.clear();
						}
						timer.reset();
					}
					if (mc.thePlayer.ticksExisted < 140)
						packets.clear();
					if(mc.thePlayer.ticksExisted > 20 * 700 && e.getDirection() == EventDirection.OUTGOING) {
						e.setCancelled(true);
						packets.add(e.getPacket());
					}
					if(mc.thePlayer.ticksExisted < 140)
						if(e.getPacket() instanceof C03PacketPlayer) {
							C03PacketPlayer c03 = (C03PacketPlayer)e.getPacket();
							c03.y = 8652;
							c03.onGround = false;
						}
					break;
				case "BlocksMC":
					setSuffix("Dollar Store Edition");
					if(Astolfy.i.moduleManager.getModuleByName("Flight").isToggled() && Flight.hurt && mc.thePlayer.hurtTime == 0) {
						mc.thePlayer.isAirBorne = false;
	
						//if(e.getPacket() instanceof C03PacketPlayer.C06PacketPlayerPosLook && e.getPacket() instanceof C0FPacketConfirmTransaction && e.getPacket() instanceof C00PacketKeepAlive) {
						//	packets.add(e.getPacket());
						//	e.setCancelled(true);
						//}
						if (e.getPacket() instanceof C03PacketPlayer) {
							C03PacketPlayer c03 = (C03PacketPlayer)e.getPacket();
							if (!timer.hasReached(50 * 10)) {
								e.setCancelled(true);
								//mc.thePlayer.sendQueue.addToSendQueueNoEvent(new C0FPacketConfirmTransaction(1,(short)1,true));
							}
							//c03.onGround = true;
						}
					}
					
					break;
				case "Experimental":
                    if (mc.thePlayer.ticksExisted % 100 == 0 && e.getPacket() instanceof C03PacketPlayer) {
                        double x = mc.thePlayer.posX,
                                y = mc.thePlayer.posY,
                                z = mc.thePlayer.posZ;
                        mc.thePlayer.sendQueue.addToSendQueueNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(x, y - 14.36D, z, false));
                        mc.thePlayer.sendQueue.addToSendQueueNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(x, y, z, false));
                    }
					
					break;
			}
		}
	}
}
